
/*****************************************************************************
  * Project: RooFit                                                           *
  *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
  *****************************************************************************/

 // Your description goes here...

 #include "Riostream.h"

 #include "RooW.h"
 #include "RooAbsReal.h"
 #include "RooAbsCategory.h"
 #include <math.h>
 #include "TMath.h"


templateClassImp(RooW);


 template<class HistClass>
 RooW<HistClass>::RooW(const char *name, const char *title,
              RooAbsReal& _x,
              RooAbsReal& _fL,
              RooAbsReal& _fR,
              HistClass* lh,
              HistClass* rh,
              HistClass* lo
              ) :
   RooAbsPdf(name,title),
   x("x","x",this,_x),
   fL("fL","fL",this,_fL),
   fR("fR","fR",this,_fR),
   mc1(lh),
   mc2(rh),
   mc3(lo)
 {
 }

     template <class HistClass>
     RooW<HistClass>::RooW(const RooW<HistClass>& other, const char* name) :
   RooAbsPdf(other,name),
   x("x",this,other.x),
   fL("fL",this,other.fL),
   fR("fR",this,other.fR),
   mc1(other.mc1),
   mc2(other.mc2),
   mc3(other.mc3)

 {
 }

         template <class HistClass>
         Double_t RooW<HistClass>::evaluate() const
 {

   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
   Double_t f;
   Double_t xx = x;

   // Helicity templates
   Double_t m1val = mc1->GetBinContent(mc1->FindBin(xx));
   Double_t m2val = mc2->GetBinContent(mc2->FindBin(xx));
   Double_t m3val = mc3->GetBinContent(mc3->FindBin(xx));

   // Signal PDF
   //f = (fL * m1val) + (fR * m2val) + ((1-fL-fR) * m3val);
   f = (fL * m1val) + ( (1-fL) *  (fR * m2val)) + ( (1-fL) * (1-fR) * m3val )  ;

   return f;

 }



