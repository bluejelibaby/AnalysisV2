/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef ROOWPLUS
#define ROOWPLUS

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

// ROOT headers
#include "TFile.h"
#include "TH1D.h"
#include "TH1F.h"
#include "TString.h"

template <class HistClass>
class RooW : public RooAbsPdf {
public:
  RooW() {} ;
  RooW(const char *name, const char *title,
           RooAbsReal& _x,
           RooAbsReal& _fL,
           RooAbsReal& _fR,
           HistClass* lh,
           HistClass* rh,
           HistClass* lo
	  );
  RooW(const RooW<HistClass>& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooW<HistClass>(*this,newname); }
  inline virtual ~RooW() { }

protected:

  RooRealProxy x ;
  RooRealProxy fL ;
  RooRealProxy fR ;
public:
  TString dir;
  TString file;
  int rbin;
  Double_t evaluate() const ;
  HistClass *mc1, *mc2, *mc3;
private:
  ClassDef(RooW,1) // Your description goes here...
};

typedef RooW<TH1D> RooW_TH1D;
typedef RooW<TH1F> RooW_TH1F;


#endif
